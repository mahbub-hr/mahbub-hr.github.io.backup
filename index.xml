<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Mahbub Hossain Raton</title><link>https://mahbub-hr.github.io/</link><atom:link href="https://mahbub-hr.github.io/index.xml" rel="self" type="application/rss+xml"/><description>Mahbub Hossain Raton</description><generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Sun, 30 May 2021 00:00:00 +0000</lastBuildDate><image><url>https://mahbub-hr.github.io/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url><title>Mahbub Hossain Raton</title><link>https://mahbub-hr.github.io/</link></image><item><title>SliveredChain: Reducing Storage in Private Blockchain Systems Using Fault-Tolerant Overlay of Non-Overlapping Shards</title><link>https://mahbub-hr.github.io/publication/sliveredchain/</link><pubDate>Sun, 30 May 2021 00:00:00 +0000</pubDate><guid>https://mahbub-hr.github.io/publication/sliveredchain/</guid><description/></item><item><title>Blood cell detection from image using Mask-RCNN</title><link>https://mahbub-hr.github.io/project/blood-cell-detection-from-image-using-mask-rcnn/</link><pubDate>Mon, 21 Dec 2020 13:15:46 +0000</pubDate><guid>https://mahbub-hr.github.io/project/blood-cell-detection-from-image-using-mask-rcnn/</guid><description>&lt;!--StartFragment-->
&lt;p>A complete blood cell count is an important test in medical diagnosis to evaluate overall health condition. Traditionally blood cells are counted manually using haemocytometer along with other laboratory equipmentâ€™s and chemical compounds, which is a time-consuming and tedious task. In this work, the authors present a machine learning approach for automatic identification and counting of three types of blood cells using Mask-RCNN image classification algorithm. Mask-RCNN framework has been trained with BCCD Dataset of blood smear images to automatically identify red blood cells, white blood cells, and platelets.&lt;/p>
&lt;!--EndFragment--></description></item><item><title>MIPS 4 Bit Processor Design</title><link>https://mahbub-hr.github.io/project/mips-4-bit-processor-design-in-logisim/</link><pubDate>Mon, 21 Dec 2020 13:15:46 +0000</pubDate><guid>https://mahbub-hr.github.io/project/mips-4-bit-processor-design-in-logisim/</guid><description>&lt;!--StartFragment-->
&lt;p>A MIPS processor that can do 4-bit operations. This processor was designed to do these 12 operations:&lt;/p>
&lt;ol>
&lt;li>Addition(add)&lt;/li>
&lt;li>Subtraction(sub)&lt;/li>
&lt;li>Add immediate(addi)&lt;/li>
&lt;li>Subtract immediate(subi)&lt;/li>
&lt;li>Logical OR(or)&lt;/li>
&lt;li>OR immediate(ori)&lt;/li>
&lt;li>Logical AND(and)&lt;/li>
&lt;li>AND immediate(ori)&lt;/li>
&lt;li>Branch Equal(beq)&lt;/li>
&lt;li>Jump(j)&lt;/li>
&lt;li>Load from memory(lw)&lt;/li>
&lt;li>Store into memory(sw)&lt;/li>
&lt;/ol>
&lt;p>The design was implemented and validated in logisim simulator. The ciruite design file along with a sample instruction file can be found in the
&lt;a href="https://github.com/mahbub-hr/mips-4-bit-processor" target="_blank" rel="noopener">code repository&lt;/a>.&lt;/p>
&lt;!--EndFragment--></description></item></channel></rss>